# Our FLUX module: dyad.so
# it will be installed in /install/lib64/dyad.so
set(DYAD_MARGO_SERVER "margo-server")
set(DYAD_MARGO_CLIENT "margo-client")

set(DYAD_MARGO_SERVER_SRC ${CMAKE_CURRENT_SOURCE_DIR}/margo-server.c)
set(DYAD_MARGO_SERVER_PRIVATE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/types.h)
set(DYAD_MARGO_SERVER_PUBLIC_HEADERS)

set(DYAD_MARGO_CLIENT_SRC ${CMAKE_CURRENT_SOURCE_DIR}/margo-client.c)
set(DYAD_MARGO_CLIENT_PRIVATE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/types.h)
set(DYAD_MARGO_CLIENT_PUBLIC_HEADERS)


add_executable(${DYAD_MARGO_SERVER} ${DYAD_MARGO_SERVER_SRC})
add_executable(${DYAD_MARGO_CLIENT} ${DYAD_MARGO_CLIENT_SRC})

dyad_add_werror_if_needed(${DYAD_MARGO_SERVER})
dyad_add_werror_if_needed(${DYAD_MARGO_CLIENT})

target_compile_definitions(${DYAD_MARGO_SERVER} PUBLIC DYAD_HAS_CONFIG)
target_compile_definitions(${DYAD_MARGO_CLIENT} PUBLIC DYAD_HAS_CONFIG)
target_link_libraries(${DYAD_MARGO_SERVER} PRIVATE PkgConfig::MARGO json-c::json-c)
target_link_libraries(${DYAD_MARGO_CLIENT} PRIVATE PkgConfig::MARGO json-c::json-c)

install(
        TARGETS ${DYAD_MARGO_SERVER}
        EXPORT ${DYAD_EXPORTED_TARGETS}
        LIBRARY DESTINATION ${DYAD_INSTALL_LIBDIR}
        ARCHIVE DESTINATION ${DYAD_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${DYAD_INSTALL_BINDIR}
)

install(
        TARGETS ${DYAD_MARGO_CLIENT}
        EXPORT ${DYAD_EXPORTED_TARGETS}
        LIBRARY DESTINATION ${DYAD_INSTALL_LIBDIR}
        ARCHIVE DESTINATION ${DYAD_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${DYAD_INSTALL_BINDIR}
)
